import { EnumType } from 'json-to-graphql-query';
import { ProductVariant } from '../types/product';
import { CreateSubscriptionContractInputRequest, UpdateSubscriptionContractInputRequest } from '../types/subscription';
import { ClientInterface } from './client';
export declare function createSubscriptionContractManager(apiClient: ClientInterface): {
    create: (intentSubsctiptionContract: CreateSubscriptionContractInputRequest, extraResultQuery?: any) => Promise<any>;
    update: (id: string, intentSubsctiptionContract: UpdateSubscriptionContractInputRequest, extraResultQuery?: any) => Promise<any>;
    createSubscriptionContractTemplateBasedOnVariantIdentity: (path: string, productVariantIdentifier: {
        sku?: string;
        id?: string;
    }, planIdentifier: string, periodId: string, priceVariantIdentifier: string, language?: string) => Promise<Omit<{
        tenantId: string;
        status: {
            price: number;
            currency: string;
            activeUntil: Date;
            renewAt: Date;
        };
        customerIdentifier: string;
        item: {
            name: string;
            sku: string;
            imageUrl?: string | undefined;
            meta?: {
                value: string;
                key: string;
            }[] | undefined;
        };
        addresses?: {
            type: EnumType;
            firstName?: string | undefined;
            middleName?: string | undefined;
            lastName?: string | undefined;
            street?: string | undefined;
            street2?: string | undefined;
            streetNumber?: string | undefined;
            postalCode?: string | undefined;
            city?: string | undefined;
            state?: string | undefined;
            country?: string | undefined;
            phone?: string | undefined;
            email?: string | undefined;
            meta?: {
                key: string;
                value?: string | undefined;
            }[] | undefined;
        }[] | undefined;
        payment?: {
            provider: EnumType;
            klarna?: {
                klarna?: string | undefined;
                orderId?: string | undefined;
                recurringToken?: string | undefined;
                status?: string | undefined;
                merchantReference1?: string | undefined;
                merchantReference2?: string | undefined;
                metadata?: string | undefined;
            } | undefined;
            paypal?: {
                paypal?: string | undefined;
                orderId?: string | undefined;
                subscriptionId?: string | undefined;
                invoiceId?: string | undefined;
                metadata?: string | undefined;
            } | undefined;
            stripe?: {
                stripe?: string | undefined;
                customerId?: string | undefined;
                orderId?: string | undefined;
                paymentMethod?: string | undefined;
                paymentMethodId?: string | undefined;
                paymentIntentId?: string | undefined;
                subscriptionId?: string | undefined;
                metadata?: string | undefined;
            } | undefined;
            cash?: {
                cash?: string | undefined;
            } | undefined;
            custom?: {
                properties?: {
                    property: string;
                    value?: string | undefined;
                }[] | undefined;
            } | undefined;
        } | undefined;
        subscriptionPlan?: {
            identifier: string;
            periodId: string;
        } | undefined;
        initial?: {
            price: number;
            meteredVariables: {
                id: string;
                tierType: EnumType;
                tiers: {
                    price: number;
                    currency: string;
                    threshold: number;
                }[];
            }[];
            currency: string;
        } | undefined;
        recurring?: {
            price: number;
            meteredVariables: {
                id: string;
                tierType: EnumType;
                tiers: {
                    price: number;
                    currency: string;
                    threshold: number;
                }[];
            }[];
            currency: string;
        } | undefined;
    }, "tenantId" | "status" | "addresses" | "payment" | "customerIdentifier">>;
    createSubscriptionContractTemplateBasedOnVariant: (variant: ProductVariant, planIdentifier: string, periodId: string, priceVariantIdentifier: string) => Promise<Omit<{
        tenantId: string;
        status: {
            price: number;
            currency: string;
            activeUntil: Date;
            renewAt: Date;
        };
        customerIdentifier: string;
        item: {
            name: string;
            sku: string;
            imageUrl?: string | undefined;
            meta?: {
                value: string;
                key: string;
            }[] | undefined;
        };
        addresses?: {
            type: EnumType;
            firstName?: string | undefined;
            middleName?: string | undefined;
            lastName?: string | undefined;
            street?: string | undefined;
            street2?: string | undefined;
            streetNumber?: string | undefined;
            postalCode?: string | undefined;
            city?: string | undefined;
            state?: string | undefined;
            country?: string | undefined;
            phone?: string | undefined;
            email?: string | undefined;
            meta?: {
                key: string;
                value?: string | undefined;
            }[] | undefined;
        }[] | undefined;
        payment?: {
            provider: EnumType;
            klarna?: {
                klarna?: string | undefined;
                orderId?: string | undefined;
                recurringToken?: string | undefined;
                status?: string | undefined;
                merchantReference1?: string | undefined;
                merchantReference2?: string | undefined;
                metadata?: string | undefined;
            } | undefined;
            paypal?: {
                paypal?: string | undefined;
                orderId?: string | undefined;
                subscriptionId?: string | undefined;
                invoiceId?: string | undefined;
                metadata?: string | undefined;
            } | undefined;
            stripe?: {
                stripe?: string | undefined;
                customerId?: string | undefined;
                orderId?: string | undefined;
                paymentMethod?: string | undefined;
                paymentMethodId?: string | undefined;
                paymentIntentId?: string | undefined;
                subscriptionId?: string | undefined;
                metadata?: string | undefined;
            } | undefined;
            cash?: {
                cash?: string | undefined;
            } | undefined;
            custom?: {
                properties?: {
                    property: string;
                    value?: string | undefined;
                }[] | undefined;
            } | undefined;
        } | undefined;
        subscriptionPlan?: {
            identifier: string;
            periodId: string;
        } | undefined;
        initial?: {
            price: number;
            meteredVariables: {
                id: string;
                tierType: EnumType;
                tiers: {
                    price: number;
                    currency: string;
                    threshold: number;
                }[];
            }[];
            currency: string;
        } | undefined;
        recurring?: {
            price: number;
            meteredVariables: {
                id: string;
                tierType: EnumType;
                tiers: {
                    price: number;
                    currency: string;
                    threshold: number;
                }[];
            }[];
            currency: string;
        } | undefined;
    }, "tenantId" | "status" | "addresses" | "payment" | "customerIdentifier">>;
};
