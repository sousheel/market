"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createCustomerManager = void 0;
const json_to_graphql_query_1 = require("json-to-graphql-query");
const customer_1 = require("../types/customer");
function convertDates(intent) {
    if (!intent.birthDate) {
        return {
            ...intent,
        };
    }
    return {
        ...intent,
        birthDate: intent.birthDate.toISOString(),
    };
}
function createCustomerManager(apiClient) {
    const create = async (intentCustomer, extraResultQuery) => {
        const intent = customer_1.createCustomerInputRequest.parse(intentCustomer);
        const api = apiClient.pimApi;
        const mutation = {
            mutation: {
                customer: {
                    create: {
                        __args: {
                            input: {
                                ...convertDates(intent),
                                tenantId: apiClient.config.tenantId || intent.tenantId || '',
                            },
                        },
                        identifier: true,
                        ...(extraResultQuery !== undefined ? extraResultQuery : {}),
                    },
                },
            },
        };
        const confirmation = await api((0, json_to_graphql_query_1.jsonToGraphQLQuery)(mutation));
        return confirmation.customer.create;
    };
    const update = async (identifier, intentCustomer, extraResultQuery) => {
        const intent = customer_1.updateCustomerInputRequest.parse(intentCustomer);
        const api = apiClient.pimApi;
        const mutation = {
            mutation: {
                customer: {
                    update: {
                        __args: {
                            identifier,
                            input: convertDates(intent),
                            tenantId: apiClient.config.tenantId || '',
                        },
                        identifier: true,
                        ...(extraResultQuery !== undefined ? extraResultQuery : {}),
                    },
                },
            },
        };
        const confirmation = await api((0, json_to_graphql_query_1.jsonToGraphQLQuery)(mutation));
        return confirmation.customer.update;
    };
    return {
        create,
        update,
    };
}
exports.createCustomerManager = createCustomerManager;
//# sourceMappingURL=customer.js.map