"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createSearcher = void 0;
const json_to_graphql_query_1 = require("json-to-graphql-query");
const search_1 = require("../types/search");
function createSearcher(client) {
    async function* search(language, nodeQuery, filter, orderBy, pageInfo, limit, cursors) {
        const args = {
            language,
            first: limit?.perPage ?? 100,
        };
        if (filter) {
            args.filter = search_1.catalogueSearchFilter.parse(filter);
        }
        if (orderBy) {
            args.orderBy = search_1.catalogueSearchOrderBy.parse(orderBy);
        }
        if (cursors?.after) {
            args.after = cursors.after;
        }
        if (cursors?.before) {
            args.after = cursors.before;
        }
        let query = {
            search: {
                __args: args,
                pageInfo: {
                    ...pageInfo,
                    hasNextPage: true,
                    endCursor: true,
                },
                edges: {
                    cursor: true,
                    node: nodeQuery,
                },
            },
        };
        let data;
        let yieldAt = 0;
        const max = limit?.total ?? Infinity;
        do {
            args.first = Math.min(max - yieldAt, args.first);
            data = await client.searchApi((0, json_to_graphql_query_1.jsonToGraphQLQuery)({ query }));
            for (const edge of data.search.edges) {
                yield edge.node;
            }
            yieldAt += args.first;
            query.search.__args.after = data.search.pageInfo.endCursor;
        } while (data.search.pageInfo.hasNextPage && yieldAt < max);
    }
    return {
        search,
    };
}
exports.createSearcher = createSearcher;
//# sourceMappingURL=search.js.map