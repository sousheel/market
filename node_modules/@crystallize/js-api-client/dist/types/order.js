"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createOrderInputRequest = exports.updateOrderInputRequest = exports.paymentInputRequest = exports.orderItemInputRequest = exports.orderMetadataInputRequest = exports.priceInputRequest = exports.orderItemSubscriptionInputRequest = exports.orderItemMeteredVariableInputRequest = void 0;
const json_to_graphql_query_1 = require("json-to-graphql-query");
const zod_1 = require("zod");
const customer_1 = require("./customer");
const payment_1 = require("./payment");
exports.orderItemMeteredVariableInputRequest = zod_1.z
    .object({
    id: zod_1.z.string(),
    usage: zod_1.z.number(),
    price: zod_1.z.number(),
})
    .strict();
exports.orderItemSubscriptionInputRequest = zod_1.z
    .object({
    name: zod_1.z.string().optional(),
    period: zod_1.z.number(),
    unit: zod_1.z.enum(['minute', 'hour', 'day', 'week', 'month', 'year']).transform((val) => new json_to_graphql_query_1.EnumType(val)),
    start: zod_1.z.date().optional(),
    end: zod_1.z.date().optional(),
    meteredVariables: zod_1.z.array(exports.orderItemMeteredVariableInputRequest).optional(),
})
    .strict();
exports.priceInputRequest = zod_1.z
    .object({
    gross: zod_1.z.number().optional(),
    net: zod_1.z.number().optional(),
    currency: zod_1.z.string(),
    discounts: zod_1.z
        .array(zod_1.z.object({
        percent: zod_1.z.number().optional(),
    }))
        .optional(),
    tax: zod_1.z.object({
        name: zod_1.z.string().optional(),
        percent: zod_1.z.number().optional(),
    }),
})
    .strict();
exports.orderMetadataInputRequest = zod_1.z
    .object({
    key: zod_1.z.string(),
    value: zod_1.z.string(),
})
    .strict();
exports.orderItemInputRequest = zod_1.z
    .object({
    name: zod_1.z.string(),
    sku: zod_1.z.string().optional(),
    productId: zod_1.z.string().optional(),
    productVariantId: zod_1.z.string().optional(),
    imageUrl: zod_1.z.string().optional(),
    quantity: zod_1.z.number(),
    subscription: exports.orderItemSubscriptionInputRequest.optional(),
    subscriptionContractId: zod_1.z.string().optional(),
    price: exports.priceInputRequest.optional(),
    subTotal: exports.priceInputRequest.optional(),
    meta: zod_1.z.array(exports.orderMetadataInputRequest).optional(),
})
    .strict();
exports.paymentInputRequest = zod_1.z
    .object({
    provider: payment_1.paymentProvider,
    klarna: payment_1.klarnaPaymentInputRequest.optional(),
    paypal: payment_1.paypalPaymentInputRequest.optional(),
    stripe: payment_1.stripePaymentInputRequest.optional(),
    cash: payment_1.cashPaymentInputRequest.optional(),
    custom: payment_1.customPaymentInputRequest.optional(),
})
    .strict();
exports.updateOrderInputRequest = zod_1.z
    .object({
    customer: customer_1.orderCustomerInputRequest.optional(),
    cart: zod_1.z.array(exports.orderItemInputRequest).optional(),
    payment: zod_1.z.array(exports.paymentInputRequest).optional(),
    total: exports.priceInputRequest.optional(),
    additionnalInformation: zod_1.z.string().optional(),
    meta: zod_1.z.array(exports.orderMetadataInputRequest).optional(),
})
    .strict();
exports.createOrderInputRequest = exports.updateOrderInputRequest
    .extend({
    customer: customer_1.orderCustomerInputRequest,
    cart: zod_1.z.array(exports.orderItemInputRequest),
    createdAt: zod_1.z.date().optional(),
})
    .strict();
//# sourceMappingURL=order.js.map