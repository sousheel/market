"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateSubscriptionContractInputRequest = exports.createSubscriptionContractInputRequest = exports.subscriptionContractPhaseInputRequest = exports.subscriptionContractMeteredVariableReferenceInputRequest = exports.subscriptionContractMeteredVariableTierInputRequest = exports.subscriptionContractMetadataInputRequest = void 0;
const zod_1 = require("zod");
const json_to_graphql_query_1 = require("json-to-graphql-query");
const order_1 = require("./order");
const address_1 = require("./address");
exports.subscriptionContractMetadataInputRequest = zod_1.z
    .object({
    key: zod_1.z.string(),
    value: zod_1.z.string(),
})
    .strict();
// Create Contract
exports.subscriptionContractMeteredVariableTierInputRequest = zod_1.z
    .object({
    currency: zod_1.z.string(),
    price: zod_1.z.number(),
    threshold: zod_1.z.number(),
})
    .strict();
exports.subscriptionContractMeteredVariableReferenceInputRequest = zod_1.z
    .object({
    id: zod_1.z.string(),
    tierType: zod_1.z.enum(['graduated', 'volume']).transform((val) => new json_to_graphql_query_1.EnumType(val)),
    tiers: zod_1.z.array(exports.subscriptionContractMeteredVariableTierInputRequest),
})
    .strict();
exports.subscriptionContractPhaseInputRequest = zod_1.z
    .object({
    currency: zod_1.z.string(),
    price: zod_1.z.number(),
    meteredVariables: zod_1.z.array(exports.subscriptionContractMeteredVariableReferenceInputRequest),
})
    .strict();
exports.createSubscriptionContractInputRequest = zod_1.z
    .object({
    customerIdentifier: zod_1.z.string(),
    tenantId: zod_1.z.string(),
    addresses: zod_1.z.array(address_1.addressInputRequest).optional(),
    payment: order_1.paymentInputRequest.optional(),
    subscriptionPlan: zod_1.z
        .object({
        identifier: zod_1.z.string(),
        periodId: zod_1.z.string(),
    })
        .optional(),
    status: zod_1.z.object({
        activeUntil: zod_1.z.date(),
        currency: zod_1.z.string(),
        price: zod_1.z.number(),
        renewAt: zod_1.z.date(),
    }),
    item: zod_1.z.object({
        sku: zod_1.z.string(),
        name: zod_1.z.string(),
        imageUrl: zod_1.z.string().optional(),
        meta: zod_1.z.array(exports.subscriptionContractMetadataInputRequest).optional(),
    }),
    initial: exports.subscriptionContractPhaseInputRequest.optional(),
    recurring: exports.subscriptionContractPhaseInputRequest.optional(),
})
    .strict();
// Update Contract
exports.updateSubscriptionContractInputRequest = zod_1.z
    .object({
    addresses: zod_1.z.array(address_1.addressInputRequest).optional(),
    payment: order_1.paymentInputRequest.optional(),
    status: zod_1.z
        .object({
        activeUntil: zod_1.z.date().optional(),
        currency: zod_1.z.string().optional(),
        price: zod_1.z.number().optional(),
        renewAt: zod_1.z.date().optional(),
    })
        .optional(),
    item: zod_1.z
        .object({
        sku: zod_1.z.string().optional(),
        name: zod_1.z.string().optional(),
        imageUrl: zod_1.z.string().optional(),
        meta: zod_1.z.array(exports.subscriptionContractMetadataInputRequest).optional(),
    })
        .optional(),
    initial: exports.subscriptionContractPhaseInputRequest.optional(),
    recurring: exports.subscriptionContractPhaseInputRequest.optional(),
})
    .strict();
//# sourceMappingURL=subscription.js.map