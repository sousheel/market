import { ClientInterface, VariablesType } from './client';
import { CatalogueFetcherGrapqhqlOnComponent, CatalogueFetcherGrapqhqlOnDocument, CatalogueFetcherGrapqhqlOnFolder, CatalogueFetcherGrapqhqlOnItem, CatalogueFetcherGrapqhqlOnProduct, CatalogueFetcherGrapqhqlOnSubscriptionPlan, ComponentType } from '../types/catalogue';
export declare function createCatalogueFetcher(client: ClientInterface): <T>(query: any, variables?: VariablesType) => Promise<T>;
export declare const catalogueFetcherGraphqlBuilder: {
    onItem: typeof onItem;
    onProduct: typeof onProduct;
    onDocument: typeof onDocument;
    onFolder: typeof onFolder;
    onComponent: typeof onComponent;
    onSubscriptionPlan: typeof onSubscriptionPlan;
};
declare function onItem(onItem?: any, c?: CatalogueFetcherGrapqhqlOnItem): any;
declare function onDocument(onDocument?: any, c?: CatalogueFetcherGrapqhqlOnDocument): any;
declare function onFolder(onFolder?: any, c?: CatalogueFetcherGrapqhqlOnFolder): any;
declare function onProduct(onProduct?: any, c?: CatalogueFetcherGrapqhqlOnProduct): any;
declare function onComponent(id: string, type: ComponentType, onComponent?: any, c?: CatalogueFetcherGrapqhqlOnComponent): any;
declare function onSubscriptionPlan(c?: CatalogueFetcherGrapqhqlOnSubscriptionPlan): any;
export {};
