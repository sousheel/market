export type ClientConfiguration = {
    tenantIdentifier: string;
    tenantId?: string;
    accessTokenId?: string;
    accessTokenSecret?: string;
    staticAuthToken?: string;
    sessionId?: string;
    origin?: string;
};
type ProfilingOptions = {
    onRequest?: (query: string, variables?: VariablesType) => void;
    onRequestResolved: ({ resolutionTimeMs, serverTimeMs, }: {
        resolutionTimeMs: number;
        serverTimeMs: number;
    }, query: string, variables?: VariablesType) => void;
};
export type CreateClientOptions = {
    profiling?: ProfilingOptions;
};
export type VariablesType = Record<string, any>;
export type ApiCaller<T> = (query: string, variables?: VariablesType) => Promise<T>;
export type ClientInterface = {
    catalogueApi: ApiCaller<any>;
    searchApi: ApiCaller<any>;
    orderApi: ApiCaller<any>;
    subscriptionApi: ApiCaller<any>;
    pimApi: ApiCaller<any>;
    config: Pick<ClientConfiguration, 'tenantIdentifier' | 'tenantId' | 'origin'>;
};
export declare function createClient(configuration: ClientConfiguration, options?: CreateClientOptions): ClientInterface;
export {};
