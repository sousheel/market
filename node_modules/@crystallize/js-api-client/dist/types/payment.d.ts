import { z } from 'zod';
import { EnumType } from 'json-to-graphql-query';
export declare const paymentProvider: z.ZodEffects<z.ZodEnum<["klarna", "stripe", "paypal", "cash", "custom"]>, EnumType, "custom" | "klarna" | "stripe" | "paypal" | "cash">;
export type PaymentProvider = z.infer<typeof paymentProvider>;
export declare const klarnaPaymentInputRequest: z.ZodObject<{
    klarna: z.ZodOptional<z.ZodString>;
    orderId: z.ZodOptional<z.ZodString>;
    recurringToken: z.ZodOptional<z.ZodString>;
    status: z.ZodOptional<z.ZodString>;
    merchantReference1: z.ZodOptional<z.ZodString>;
    merchantReference2: z.ZodOptional<z.ZodString>;
    metadata: z.ZodOptional<z.ZodString>;
}, "strict", z.ZodTypeAny, {
    klarna?: string | undefined;
    orderId?: string | undefined;
    recurringToken?: string | undefined;
    status?: string | undefined;
    merchantReference1?: string | undefined;
    merchantReference2?: string | undefined;
    metadata?: string | undefined;
}, {
    klarna?: string | undefined;
    orderId?: string | undefined;
    recurringToken?: string | undefined;
    status?: string | undefined;
    merchantReference1?: string | undefined;
    merchantReference2?: string | undefined;
    metadata?: string | undefined;
}>;
export type KlarnaPaymentInputRequest = z.infer<typeof klarnaPaymentInputRequest>;
export declare const paypalPaymentInputRequest: z.ZodObject<{
    paypal: z.ZodOptional<z.ZodString>;
    orderId: z.ZodOptional<z.ZodString>;
    subscriptionId: z.ZodOptional<z.ZodString>;
    invoiceId: z.ZodOptional<z.ZodString>;
    metadata: z.ZodOptional<z.ZodString>;
}, "strict", z.ZodTypeAny, {
    paypal?: string | undefined;
    orderId?: string | undefined;
    subscriptionId?: string | undefined;
    invoiceId?: string | undefined;
    metadata?: string | undefined;
}, {
    paypal?: string | undefined;
    orderId?: string | undefined;
    subscriptionId?: string | undefined;
    invoiceId?: string | undefined;
    metadata?: string | undefined;
}>;
export type PaypalPaymentInputRequest = z.infer<typeof paypalPaymentInputRequest>;
export declare const stripePaymentInputRequest: z.ZodObject<{
    stripe: z.ZodOptional<z.ZodString>;
    customerId: z.ZodOptional<z.ZodString>;
    orderId: z.ZodOptional<z.ZodString>;
    paymentMethod: z.ZodOptional<z.ZodString>;
    paymentMethodId: z.ZodOptional<z.ZodString>;
    paymentIntentId: z.ZodOptional<z.ZodString>;
    subscriptionId: z.ZodOptional<z.ZodString>;
    metadata: z.ZodOptional<z.ZodString>;
}, "strict", z.ZodTypeAny, {
    stripe?: string | undefined;
    customerId?: string | undefined;
    orderId?: string | undefined;
    paymentMethod?: string | undefined;
    paymentMethodId?: string | undefined;
    paymentIntentId?: string | undefined;
    subscriptionId?: string | undefined;
    metadata?: string | undefined;
}, {
    stripe?: string | undefined;
    customerId?: string | undefined;
    orderId?: string | undefined;
    paymentMethod?: string | undefined;
    paymentMethodId?: string | undefined;
    paymentIntentId?: string | undefined;
    subscriptionId?: string | undefined;
    metadata?: string | undefined;
}>;
export type StripePaymentInputRequest = z.infer<typeof stripePaymentInputRequest>;
export declare const cashPaymentInputRequest: z.ZodObject<{
    cash: z.ZodOptional<z.ZodString>;
}, "strict", z.ZodTypeAny, {
    cash?: string | undefined;
}, {
    cash?: string | undefined;
}>;
export type CashPaymentInputRequest = z.infer<typeof cashPaymentInputRequest>;
export declare const customPaymentInputRequest: z.ZodObject<{
    properties: z.ZodOptional<z.ZodArray<z.ZodObject<{
        property: z.ZodString;
        value: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        property: string;
        value?: string | undefined;
    }, {
        property: string;
        value?: string | undefined;
    }>, "many">>;
}, "strict", z.ZodTypeAny, {
    properties?: {
        property: string;
        value?: string | undefined;
    }[] | undefined;
}, {
    properties?: {
        property: string;
        value?: string | undefined;
    }[] | undefined;
}>;
export type CustomPaymentInputRequest = z.infer<typeof customPaymentInputRequest>;
interface PaymentType {
    provider: PaymentProvider;
}
export type KlarnaPayment = PaymentType & Omit<KlarnaPaymentInputRequest, 'klarna'>;
export type PaypalPayment = PaymentType & Omit<PaypalPaymentInputRequest, 'paypal'>;
export type StripePayment = PaymentType & Omit<StripePaymentInputRequest, 'stripe'>;
export type CashPayment = PaymentType & CashPaymentInputRequest;
export type CustomPayment = PaymentType & CustomPaymentInputRequest;
export {};
